%!PS-Adobe-3.0
%%BoundingBox: 24 24 571 818
%%Title: Enscript Output
%%For: Cen Li
%%Creator: GNU Enscript 1.6.6
%%CreationDate: Wed Jan 18 13:18:17 2017
%%Orientation: Landscape
%%Pages: (atend)
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 6
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 6
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 7 7 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [595 842] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-enscript 1.6 6
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    % light bar
    0 0 d_header_w d_header_h 2 div Box
    .95 setgray fill

    % dark gray boxes
    /dbw d_header_h 2 mul def	% dark box width
    /dbc .7 def			% dark box color

    % left dark box.
    0 0 dbw d_header_h Box
    dbc setgray fill

    0 setgray 
    HeaderDateF setfont
    moddatestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 5 div moveto show

    % right dark box
    d_header_w dbw sub 0 dbw d_header_h Box
    dbc setgray fill

    HeaderPageNumF setfont
    1 setgray
    pagenumstr dup
    stringwidth pop dbw exch sub 2 div d_header_w dbw sub add
    d_header_h .2 mul moveto show

    % filename
    0 setgray 
    HeaderHDRF setfont
    d_header_w fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      /h d_header_h 8 div 5 mul def

      % Implement strict enscript compatibility.
      user_header_center_str () eq user_header_right_str () eq and {
        d_header_w user_header_left_str stringwidth pop sub 2 div 
        h moveto user_header_left_str show
      } {
        dbw 5 add h moveto user_header_left_str show

        d_header_w user_header_center_str stringwidth pop sub 2 div 
        h moveto user_header_center_str show

	d_header_w dbw sub 5 sub user_header_right_str stringwidth pop
	sub h moveto user_header_right_str show
      } ifelse
    } if

  grestore
} def
%%EndResource
/d_page_w 794 def
/d_page_h 547 def
/d_header_x 0 def
/d_header_y 511 def
/d_header_w 794 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 794 def
/d_footer_h 0 def
/d_output_w 794 def
/d_output_h 511 def
/cols 2 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 1 def
/fname (recommendationDemo.py) def
/fdir (.) def
/ftail (recommendationDemo.py) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (01/18/17) def
/modtimestr (13:16:53) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
5 501 M
(# user based recommendations) s
5 493 M
(import pprint) s
5 485 M
(from math import sqrt) s
5 469 M
(# load database and construct the  nested dictionary) s
5 461 M
(def loadMovies\(\):) s
5 445 M
(  #Get movie titles) s
5 437 M
(  movies={}) s
5 429 M
(  for line in open\('movies.dat'\):) s
5 421 M
(    \(id, title\) = line.split\('|'\)[0:2]) s
5 413 M
(    movies[id] = title) s
5 397 M
(  #load data) s
5 389 M
(  prefs={}) s
5 381 M
(  for line in open\('test.dat'\):) s
5 373 M
(    \(usr, movieid, rating, ts\) = line.split\('\\t'\)) s
5 365 M
(    prefs.setdefault\(usr, {}\)) s
5 357 M
(    prefs[usr][movies[movieid]]=float\(rating\)) s
5 349 M
(  return \(movies, prefs\)) s
5 333 M
(# compute the Euclidean distance between two person's preferences) s
5 325 M
(def sim_distance\(prefs, person1, person2\):) s
5 309 M
(  #Get the list of shared items) s
5 301 M
(  si = {}) s
5 293 M
(  for it in prefs[person1]:) s
5 285 M
(    if it in prefs[person2]:) s
5 277 M
(      si[it]=1) s
5 261 M
(  #if they have no ratings in common, return 0) s
5 253 M
(  if \(len\(si\) == 0\): return 0) s
5 237 M
(  # Add up the squares of all the differences) s
5 229 M
(  euclidean_distance = sqrt\(sum\([pow\(prefs[person1][it] - prefs[person2][it], 2\) ) s
5 221 M
(                    for it in si]\)\)) s
5 205 M
(  similarity = 1/\(1+euclidean_distance\)) s
5 197 M
(  return similarity) s
5 181 M
(# compute the pearson correlation coefficient) s
5 173 M
(def sim_pearson\(prefs, person1, person2\):) s
5 165 M
( ) s
5 157 M
(  #Get the list of shared items) s
5 149 M
(  si = {}) s
5 141 M
(  for it in prefs[person1]:) s
5 133 M
(    if it in prefs[person2]:) s
5 125 M
(      si[it]=1) s
5 117 M
(  ) s
5 109 M
(  # Find the number of elements) s
5 101 M
(  n = len\(si\)) s
5 85 M
(  # if they have no ratings in common, return 0) s
5 77 M
(  if n==0:  return 0) s
5 61 M
(  # sum) s
5 53 M
(  sum1 = sum\([prefs[person1][it] for it in si]\)) s
5 45 M
(  sum2 = sum\([prefs[person2][it] for it in si]\)) s
5 29 M
(  # sum of the squares) s
5 21 M
(  sum1Square = sum\([pow\(prefs[person1][it], 2\) for it in si]\)) s
5 13 M
(  sum2Square = sum\([pow\(prefs[person2][it], 2\) for it in si]\)) s
402 501 M
(  # sum up the products) s
402 493 M
(  pSum = sum\([prefs[person1][it]*prefs[person2][it] for it in si]\)) s
402 477 M
(  # compute the correlation coefficient) s
402 469 M
(  num = pSum - \(sum1*sum2/n\)) s
402 461 M
(  denom = sqrt\(\(sum1Square - pow\(sum1, 2\)/n\)*\(sum2Square - pow\(sum2, 2\)/n\)\)) s
402 445 M
(  if denom == 0: return 0) s
402 429 M
(  pearson_correlation = num/denom) s
402 413 M
(  return pearson_correlation) s
402 397 M
(# return the top N most similar person/items) s
402 389 M
(def topMatches\(prefs, person, n=5, similarity=sim_pearson\):) s
402 381 M
(  scores=[\(similarity\(prefs, person, other\), other\)) s
402 373 M
(             for other in prefs if other != person]) s
402 357 M
(  # sort the list so the highest scores appear at the top) s
402 349 M
(  scores.sort\(\)) s
402 341 M
(  scores.reverse\(\)) s
402 325 M
(  return scores[0:n]) s
402 309 M
(# Get recommendations for a person by using a weighted average) s
402 301 M
(# of every other user's ranking) s
402 293 M
(def getRecommendations\(prefs, person, similarity=sim_pearson\):) s
402 277 M
(  totals={}) s
402 269 M
(  simSums = {}) s
402 253 M
(  for other in prefs:) s
402 245 M
(    # don't compare one to himself) s
402 237 M
(    if other == person:) s
402 229 M
(      continue) s
402 213 M
(    sim = similarity\(prefs, person, other\)) s
402 205 M
(  ) s
402 197 M
(    #ignore scores of zero or lower) s
402 189 M
(    if sim < 0: ) s
402 181 M
(      continue) s
402 165 M
(    for item in prefs[other]:) s
402 157 M
(      #only score movies I have not seen before) s
402 149 M
(      if item not in prefs[person] or prefs[person][item]==0:) s
402 141 M
(        totals.setdefault\(item, 0\)) s
402 133 M
(        ) s
402 125 M
(        #weighted similarity score = simiarity * score) s
402 117 M
(        totals[item] += prefs[other][item]*sim) s
402 101 M
(        #sum of similarities) s
402 93 M
(        simSums.setdefault\(item, 0\)) s
402 85 M
(        simSums[item] += sim) s
402 69 M
(  ## !! indentation) s
402 61 M
(  # Create the normalized list) s
402 53 M
(  rankings=[\(total/\(simSums[item]\), item\)) s
402 45 M
(              for item, total in totals.items\(\)]) s
402 29 M
(  # Retrn the sorted list) s
402 21 M
(  rankings.sort\(\)) s
402 13 M
(  rankings.reverse\(\)) s
402 5 M
(    ) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
90 rotate
24 -571 translate
/pagenum 2 def
/fname (recommendationDemo.py) def
/fdir (.) def
/ftail (recommendationDemo.py) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (01/18/17) def
/modtimestr (13:16:53) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
column_lines
do_header
5 501 M
(  return rankings) s
5 485 M
(# main function) s
5 477 M
(if __name__ == '__main__':) s
5 461 M
(  movies, prefs = loadMovies\(\)) s
5 453 M
(  pp = pprint.PrettyPrinter\(indent=2\)) s
5 445 M
(  print "List of movies are:\\n") s
5 437 M
(  pp.pprint\(movies\)) s
5 421 M
(  print "\\nThe preference list is:\\n") s
5 413 M
(  pp.pprint\(prefs\)) s
5 397 M
(  recommendations = getRecommendations\(prefs, '1', sim_distance\)) s
5 389 M
(  print recommendations) s
_R
S
%%Trailer
%%Pages: 2
%%DocumentNeededResources: font Times-Roman Courier-Bold Courier 
%%+ font Times-Bold 
%%EOF
